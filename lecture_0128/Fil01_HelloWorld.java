package lecture_0128;


// 프로그래밍 관련 용어
//	- 주석(comments)
//		: 소스 코드 내에 설명을 작성하기 위한 기능
//		: 프로그램 실행에 전혀 영향이 없다.
//		: 종류
//			한 줄 주석		: '//' 이후 내용을 주석으로 처리
//						: ctrl + / (설정 & 해제)
//			여러 줄 주석	: '/*' 와 '*/' 사이의 내용을 주석으로 처리
//						: ctrl + shift + / (설정)
//						: ctrl + shift + \ (해제)

//	- 키워드(Keyword)
//		: Java 언어에서 사용되는 기능 또는 의미가 있는 단어

//	- 식별자(Identifier)
//		: 데이터, 함수, 클래스 등에 부여되는 단어
//		: 데이터, 함수, 클래스 등을 식별하기 위해 사용된다.
//		: 개발자에 의해 부여된다.

//	- 표현식(Expression)
//		: 데이터를 표현하는 식 = 문법
//		: 숫자의 표현식 → 100
//		: 문자의 표현식 → 'a'
//		: 더하기 연산자의 표현식 → 100 + 200

//	- 명령어(Command)
//		: 하나 이상의 표현식으로 구성된 문장
//		: 프로그램이 수행하는 단위
//		: 문장의 마침표를 작성하듯
//		  명령어의 마지막에 세미콜론(;)을 작성

//	- 블록(Block) = 스코프(Scope)
//		: 다수의 코드를 감싸는 영역
//		: 블록 내에는 또 다른 블록이 있을 수 있다.
//		: 중괄호({})를 통해 만들며, 중괄호 내에 코드를 작성할 때
//		  한 번의 들여쓰기를 통해 가독성을 높이는 것이 좋다.
//			→ ctrl + i : 들여쓰기 정리

//	- 함수(Function), 메서드(Method)
//		: 하나 이상의 명령어들로 구성된 블록
//		: 하나의 기능을 담당
//		: Java 에서는 함수라는 이름 대신 '메서드'라고 부른다.
//		  또는 '멤버 함수'라고 한다.

//	- 클래스(class)
//		: 필드와 메서드로 구성된 블록(그 외 명령어는 있을 수 없다.)
//		: 하나의 객체를 표현하기 위한 타입
//		: 클래스의 이름은 파일의 이름과 동일해야한다.
//		  → 한 파일에 다수의 클래스를 작성할 순 있지만
//		  → 하나의 클래스는 하나의 파일로 작성하는 것을 원칙
//		  → public 이 붙는 클래스는 하나여야하며 해당 클래스의 이름이
//			파일과 반드시 같아야 한다.

class Other { }

// Java 에서는 모든 코드들이 클래스 내에 작성되어야한다.
// public 으로 설정된 클래스는 파일의 이름과 동일해야하며
// 단, 하나만 작성될 수 있다.
public class Fil01_HelloWorld {
	// 필드(멤버 변수)와 메서드(멤버 함수)로 구성
	
	//	System.out.print("Hello World!");
	// → 명령어는 클래스 내에서 작성될 수 없다.
	
	// 메서드
	//	- 다수의 명령어들로 구성된 기능을 담당
	// 	- f(x) = x + 10
	static int f(int x) {
		return x + 10;
	}
	
	// main 메서드
	//	- 엔트리 포인트 : JVM 이 맨 처음 실행하는 메서드
	//	- 메서드는 반드시 클래스 내에 작성되어야 한다.
	//	- main 입력 후 ctrl + space : 자동 완성
	public static void main(String[] args) {
		// 명령어로 구성
		
		System.out.println(f(15));
		System.out.print("Hello World!");
		
	}
	
}
